{"ast":null,"code":"import axios from 'axios';\nconst refreshAccessToken = async refreshToken => {\n  try {\n    console.log('Refreshing access token with refresh token:', refreshToken);\n    const response = await axios.post('http://localhost:5000/api/auth/token', {\n      token: refreshToken\n    });\n    console.log('New access token:', response.data.accessToken);\n    localStorage.setItem('token', response.data.accessToken);\n    return response.data.accessToken;\n  } catch (error) {\n    console.error('Error refreshing access token', error);\n    return null;\n  }\n};\nconst apiRequest = async (url, options = {}) => {\n  let token = localStorage.getItem('token');\n  const refreshToken = localStorage.getItem('refreshToken');\n  if (!token) {\n    console.log('No access token found, redirecting to login');\n    window.location.href = '/marketing-app/login';\n    return;\n  }\n  try {\n    const response = await axios({\n      url,\n      ...options,\n      headers: {\n        ...options.headers,\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response;\n  } catch (error) {\n    console.error('API request error:', error);\n    if (error.response && error.response.status === 403) {\n      console.log('Access token expired, attempting to refresh...');\n      token = await refreshAccessToken(refreshToken);\n      if (token) {\n        console.log('Retrying original request with new access token...');\n        const response = await axios({\n          url,\n          ...options,\n          headers: {\n            ...options.headers,\n            Authorization: `Bearer ${token}`\n          }\n        });\n        return response;\n      } else {\n        console.log('Refresh token invalid, redirecting to login...');\n        window.location.href = '/marketing-app/login';\n      }\n    } else {\n      throw error;\n    }\n  }\n};\nexport default apiRequest;","map":{"version":3,"names":["axios","refreshAccessToken","refreshToken","console","log","response","post","token","data","accessToken","localStorage","setItem","error","apiRequest","url","options","getItem","window","location","href","headers","Authorization","status"],"sources":["C:/Users/nharada/marketing-app/src/apiRequest.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst refreshAccessToken = async (refreshToken) => {\r\n  try {\r\n    console.log('Refreshing access token with refresh token:', refreshToken);\r\n    const response = await axios.post('http://localhost:5000/api/auth/token', { token: refreshToken });\r\n    console.log('New access token:', response.data.accessToken);\r\n    localStorage.setItem('token', response.data.accessToken);\r\n    return response.data.accessToken;\r\n  } catch (error) {\r\n    console.error('Error refreshing access token', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst apiRequest = async (url, options = {}) => {\r\n  let token = localStorage.getItem('token');\r\n  const refreshToken = localStorage.getItem('refreshToken');\r\n\r\n  if (!token) {\r\n    console.log('No access token found, redirecting to login');\r\n    window.location.href = '/marketing-app/login';\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await axios({\r\n      url,\r\n      ...options,\r\n      headers: {\r\n        ...options.headers,\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    console.error('API request error:', error);\r\n    if (error.response && error.response.status === 403) {\r\n      console.log('Access token expired, attempting to refresh...');\r\n      token = await refreshAccessToken(refreshToken);\r\n      if (token) {\r\n        console.log('Retrying original request with new access token...');\r\n        const response = await axios({\r\n          url,\r\n          ...options,\r\n          headers: {\r\n            ...options.headers,\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        return response;\r\n      } else {\r\n        console.log('Refresh token invalid, redirecting to login...');\r\n        window.location.href = '/marketing-app/login';\r\n      }\r\n    } else {\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default apiRequest;\r\n\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,kBAAkB,GAAG,MAAOC,YAAY,IAAK;EACjD,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,6CAA6C,EAAEF,YAAY,CAAC;IACxE,MAAMG,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,sCAAsC,EAAE;MAAEC,KAAK,EAAEL;IAAa,CAAC,CAAC;IAClGC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,QAAQ,CAACG,IAAI,CAACC,WAAW,CAAC;IAC3DC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEN,QAAQ,CAACG,IAAI,CAACC,WAAW,CAAC;IACxD,OAAOJ,QAAQ,CAACG,IAAI,CAACC,WAAW;EAClC,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdT,OAAO,CAACS,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,OAAO,IAAI;EACb;AACF,CAAC;AAED,MAAMC,UAAU,GAAG,MAAAA,CAAOC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EAC9C,IAAIR,KAAK,GAAGG,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;EACzC,MAAMd,YAAY,GAAGQ,YAAY,CAACM,OAAO,CAAC,cAAc,CAAC;EAEzD,IAAI,CAACT,KAAK,EAAE;IACVJ,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;IAC1Da,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,sBAAsB;IAC7C;EACF;EAEA,IAAI;IACF,MAAMd,QAAQ,GAAG,MAAML,KAAK,CAAC;MAC3Bc,GAAG;MACH,GAAGC,OAAO;MACVK,OAAO,EAAE;QACP,GAAGL,OAAO,CAACK,OAAO;QAClBC,aAAa,EAAE,UAAUd,KAAK;MAChC;IACF,CAAC,CAAC;IACF,OAAOF,QAAQ;EACjB,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdT,OAAO,CAACS,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,IAAIA,KAAK,CAACP,QAAQ,IAAIO,KAAK,CAACP,QAAQ,CAACiB,MAAM,KAAK,GAAG,EAAE;MACnDnB,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;MAC7DG,KAAK,GAAG,MAAMN,kBAAkB,CAACC,YAAY,CAAC;MAC9C,IAAIK,KAAK,EAAE;QACTJ,OAAO,CAACC,GAAG,CAAC,oDAAoD,CAAC;QACjE,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAAC;UAC3Bc,GAAG;UACH,GAAGC,OAAO;UACVK,OAAO,EAAE;YACP,GAAGL,OAAO,CAACK,OAAO;YAClBC,aAAa,EAAE,UAAUd,KAAK;UAChC;QACF,CAAC,CAAC;QACF,OAAOF,QAAQ;MACjB,CAAC,MAAM;QACLF,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;QAC7Da,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,sBAAsB;MAC/C;IACF,CAAC,MAAM;MACL,MAAMP,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}