{"ast":null,"code":"import axios from 'axios';\nconst apiRequest = async (url, options = {}) => {\n  let token = localStorage.getItem('token');\n  if (!token) {\n    alert('No token found. Redirecting to login.');\n    window.location.href = '/marketing-app/login';\n    return;\n  }\n  try {\n    alert(`Making request to: ${url} with options: ${JSON.stringify(options)}`);\n    const response = await axios({\n      url,\n      ...options,\n      headers: {\n        ...options.headers,\n        Authorization: `Bearer ${token}`\n      }\n    });\n    alert(`Request successful: ${JSON.stringify(response.data)}`);\n    return response;\n  } catch (error) {\n    alert(`Error making request: ${error}`);\n    if (error.response && error.response.status === 403) {\n      alert('Access token expired or invalid. Redirecting to login.');\n      window.location.href = '/marketing-app/login';\n    } else {\n      throw error;\n    }\n  }\n};\nexport default apiRequest;","map":{"version":3,"names":["axios","apiRequest","url","options","token","localStorage","getItem","alert","window","location","href","JSON","stringify","response","headers","Authorization","data","error","status"],"sources":["C:/Users/nharada/marketing-app/src/utils/apiRequest.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst apiRequest = async (url, options = {}) => {\r\n  let token = localStorage.getItem('token');\r\n\r\n  if (!token) {\r\n    alert('No token found. Redirecting to login.');\r\n    window.location.href = '/marketing-app/login';\r\n    return;\r\n  }\r\n\r\n  try {\r\n    alert(`Making request to: ${url} with options: ${JSON.stringify(options)}`);\r\n    const response = await axios({\r\n      url,\r\n      ...options,\r\n      headers: {\r\n        ...options.headers,\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    alert(`Request successful: ${JSON.stringify(response.data)}`);\r\n    return response;\r\n  } catch (error) {\r\n    alert(`Error making request: ${error}`);\r\n    if (error.response && error.response.status === 403) {\r\n      alert('Access token expired or invalid. Redirecting to login.');\r\n      window.location.href = '/marketing-app/login';\r\n    } else {\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default apiRequest;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,UAAU,GAAG,MAAAA,CAAOC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EAC9C,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAEzC,IAAI,CAACF,KAAK,EAAE;IACVG,KAAK,CAAC,uCAAuC,CAAC;IAC9CC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,sBAAsB;IAC7C;EACF;EAEA,IAAI;IACFH,KAAK,CAAC,sBAAsBL,GAAG,kBAAkBS,IAAI,CAACC,SAAS,CAACT,OAAO,CAAC,EAAE,CAAC;IAC3E,MAAMU,QAAQ,GAAG,MAAMb,KAAK,CAAC;MAC3BE,GAAG;MACH,GAAGC,OAAO;MACVW,OAAO,EAAE;QACP,GAAGX,OAAO,CAACW,OAAO;QAClBC,aAAa,EAAE,UAAUX,KAAK;MAChC;IACF,CAAC,CAAC;IACFG,KAAK,CAAC,uBAAuBI,IAAI,CAACC,SAAS,CAACC,QAAQ,CAACG,IAAI,CAAC,EAAE,CAAC;IAC7D,OAAOH,QAAQ;EACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdV,KAAK,CAAC,yBAAyBU,KAAK,EAAE,CAAC;IACvC,IAAIA,KAAK,CAACJ,QAAQ,IAAII,KAAK,CAACJ,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;MACnDX,KAAK,CAAC,wDAAwD,CAAC;MAC/DC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,sBAAsB;IAC/C,CAAC,MAAM;MACL,MAAMO,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAehB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}