{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nconst refreshAccessToken = async refreshToken => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/api/auth/token`, {\n      token: refreshToken\n    });\n    localStorage.setItem('token', response.data.accessToken);\n    return response.data.accessToken;\n  } catch (error) {\n    console.error('Error refreshing access token', error);\n    return null;\n  }\n};\nconst apiRequest = async (url, options = {}) => {\n  let token = localStorage.getItem('token');\n  const refreshToken = localStorage.getItem('refreshToken');\n  if (!token) {\n    alert('No token found. Redirecting to login.');\n    window.location.href = '/marketing-app/login';\n    return;\n  }\n  try {\n    alert('Sending request to: ' + `${API_BASE_URL}${url}`);\n    const response = await axios({\n      url: `${API_BASE_URL}${url}`,\n      method: options.method || 'GET',\n      data: options.data || {},\n      headers: {\n        Authorization: `Bearer ${token}`,\n        ...options.headers\n      },\n      ...options\n    });\n    alert('Request successful');\n    return response;\n  } catch (error) {\n    alert('Initial request error: ' + error.message); // デバッグ用アラート\n    if (error.response && error.response.status === 403) {\n      token = await refreshAccessToken(refreshToken);\n      if (token) {\n        try {\n          alert('Retrying request to: ' + `${API_BASE_URL}${url}`);\n          const response = await axios({\n            url: `${API_BASE_URL}${url}`,\n            method: options.method || 'GET',\n            data: options.data || {},\n            headers: {\n              Authorization: `Bearer ${token}`,\n              ...options.headers\n            },\n            ...options\n          });\n          alert('Retry request successful');\n          return response;\n        } catch (retryError) {\n          alert('Retry request error: ' + retryError.message); // デバッグ用アラート\n          throw retryError;\n        }\n      } else {\n        alert('No refresh token found. Redirecting to login.');\n        window.location.href = '/marketing-app/login';\n      }\n    } else {\n      throw error;\n    }\n  }\n};\nexport default apiRequest;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","refreshAccessToken","refreshToken","response","post","token","localStorage","setItem","data","accessToken","error","console","apiRequest","url","options","getItem","alert","window","location","href","method","headers","Authorization","message","status","retryError"],"sources":["C:/Users/nharada/marketing-app/src/utils/apiRequest.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\n\r\nconst refreshAccessToken = async (refreshToken) => {\r\n  try {\r\n    const response = await axios.post(`${API_BASE_URL}/api/auth/token`, { token: refreshToken });\r\n    localStorage.setItem('token', response.data.accessToken);\r\n    return response.data.accessToken;\r\n  } catch (error) {\r\n    console.error('Error refreshing access token', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst apiRequest = async (url, options = {}) => {\r\n  let token = localStorage.getItem('token');\r\n  const refreshToken = localStorage.getItem('refreshToken');\r\n\r\n  if (!token) {\r\n    alert('No token found. Redirecting to login.');\r\n    window.location.href = '/marketing-app/login';\r\n    return;\r\n  }\r\n\r\n  try {\r\n    alert('Sending request to: ' + `${API_BASE_URL}${url}`);\r\n    const response = await axios({\r\n      url: `${API_BASE_URL}${url}`,\r\n      method: options.method || 'GET',\r\n      data: options.data || {},\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        ...options.headers,\r\n      },\r\n      ...options,\r\n    });\r\n    alert('Request successful');\r\n    return response;\r\n  } catch (error) {\r\n    alert('Initial request error: ' + error.message); // デバッグ用アラート\r\n    if (error.response && error.response.status === 403) {\r\n      token = await refreshAccessToken(refreshToken);\r\n      if (token) {\r\n        try {\r\n          alert('Retrying request to: ' + `${API_BASE_URL}${url}`);\r\n          const response = await axios({\r\n            url: `${API_BASE_URL}${url}`,\r\n            method: options.method || 'GET',\r\n            data: options.data || {},\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              ...options.headers,\r\n            },\r\n            ...options,\r\n          });\r\n          alert('Retry request successful');\r\n          return response;\r\n        } catch (retryError) {\r\n          alert('Retry request error: ' + retryError.message); // デバッグ用アラート\r\n          throw retryError;\r\n        }\r\n      } else {\r\n        alert('No refresh token found. Redirecting to login.');\r\n        window.location.href = '/marketing-app/login';\r\n      }\r\n    } else {\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default apiRequest;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}