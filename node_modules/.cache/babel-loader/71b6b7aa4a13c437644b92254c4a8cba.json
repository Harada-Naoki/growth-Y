{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nharada\\\\marketing-app\\\\src\\\\components\\\\Page1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport apiRequest from '../utils/apiRequest';\nimport '../App.css';\nimport ChatBubble from '../components/ChatBubble';\nimport QuizQuestion from '../components/QuizQuestion';\nimport { BookOpen } from 'lucide-react';\n\n// フックの前にチャプターデータをロード\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chapterData = Array.from({\n  length: 7\n}, (_, i) => require(`../data/chapter1/chapter1_${i + 1}.js`));\nfunction Page1() {\n  _s();\n  var _quizQuestions$curren, _quizQuestions$curren2, _quizQuestions$curren3;\n  const {\n    chapterId\n  } = useParams();\n  const chapterIndex = parseInt(chapterId, 10) - 1;\n  const navigate = useNavigate();\n  const [visibleStep, setVisibleStep] = useState(0);\n  const [quizStarted, setQuizStarted] = useState(false);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n  const chatContainerRef = useRef(null);\n  const [studyTime, setStudyTime] = useState(0);\n  const [startTime, setStartTime] = useState(Date.now());\n  const [inactiveStartTime, setInactiveStartTime] = useState(null);\n  const [allImagesLoaded, setAllImagesLoaded] = useState(false);\n  const inactivityTimer = useRef(null);\n\n  // チャプターデータの有効性チェック\n  const isValidChapter = chapterIndex >= 0 && chapterIndex < chapterData.length;\n  const chapter = isValidChapter ? chapterData[chapterIndex] : null;\n  const saveStudyTime = async time => {\n    try {\n      await apiRequest('/api/progress/update', {\n        method: 'POST',\n        data: {\n          chapterId: `${chapterId}`,\n          studyTime: time\n        }\n      });\n    } catch (error) {\n      console.error('Error saving study time', error);\n    }\n  };\n  useEffect(() => {\n    if (!isValidChapter) {\n      // 無効なチャプターIDの場合、ホームページにリダイレクト\n      navigate('/');\n      return;\n    }\n    const resetInactivityTimer = () => {\n      if (inactivityTimer.current) {\n        clearTimeout(inactivityTimer.current);\n      }\n      inactivityTimer.current = setTimeout(() => {\n        handleInactivity();\n      }, 180000); // 3分（180秒）\n    };\n    const handleInactivity = () => {\n      setInactiveStartTime(Date.now()); // 非アクティブの開始時間を記録\n    };\n    const handleVisibilityChange = () => {\n      if (document.visibilityState === 'hidden' || document.hidden) {\n        handleInactivity();\n      } else {\n        if (inactiveStartTime) {\n          const inactiveEndTime = Date.now();\n          const inactiveDuration = Math.floor((inactiveEndTime - inactiveStartTime) / 1000); // 非アクティブ時間\n          setInactiveStartTime(null); // 非アクティブ時間をリセット\n          setStartTime(prevTime => prevTime + inactiveDuration * 1000); // startTimeを非アクティブ時間だけ進める\n        }\n        setStartTime(Date.now());\n        resetInactivityTimer();\n      }\n    };\n    const handleWindowFocus = () => {\n      if (inactiveStartTime) {\n        const inactiveEndTime = Date.now();\n        const inactiveDuration = Math.floor((inactiveEndTime - inactiveStartTime) / 1000); // 非アクティブ時間\n        setInactiveStartTime(null); // 非アクティブ時間をリセット\n        setStartTime(prevTime => prevTime + inactiveDuration * 1000); // startTimeを非アクティブ時間だけ進める\n      }\n      setStartTime(Date.now());\n      resetInactivityTimer();\n    };\n    const handleWindowBlur = () => {\n      handleInactivity();\n    };\n    const handleUserActivity = () => {\n      if (inactiveStartTime) {\n        const inactiveEndTime = Date.now();\n        const inactiveDuration = Math.floor((inactiveEndTime - inactiveStartTime) / 1000); // 非アクティブ時間\n        setInactiveStartTime(null); // 非アクティブ時間をリセット\n        setStartTime(prevTime => prevTime + inactiveDuration * 1000); // startTimeを非アクティブ時間だけ進める\n      }\n      resetInactivityTimer();\n    };\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    window.addEventListener('focus', handleWindowFocus);\n    window.addEventListener('blur', handleWindowBlur);\n    window.addEventListener('mousemove', handleUserActivity);\n    window.addEventListener('keydown', handleUserActivity);\n    window.addEventListener('touchstart', handleUserActivity); // スマホ対応\n    window.addEventListener('touchmove', handleUserActivity); // スマホ対応\n\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n      window.removeEventListener('focus', handleWindowFocus);\n      window.removeEventListener('blur', handleWindowBlur);\n      window.removeEventListener('mousemove', handleUserActivity);\n      window.removeEventListener('keydown', handleUserActivity);\n      window.removeEventListener('touchstart', handleUserActivity); // スマホ対応\n      window.removeEventListener('touchmove', handleUserActivity); // スマホ対応\n\n      if (inactivityTimer.current) {\n        clearTimeout(inactivityTimer.current);\n      }\n      const endTime = Date.now();\n      const elapsed = Math.floor((endTime - startTime) / 1000);\n      saveStudyTime(studyTime + elapsed); // isMountedチェックを外して保存\n    };\n  }, [isValidChapter, navigate, startTime, studyTime, chapterId, inactiveStartTime, saveStudyTime]);\n\n  // コンテンツが追加されるたびに最下部にスクロール\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [visibleStep, quizStarted, currentQuestionIndex, showFeedback, showResults, allImagesLoaded]);\n\n  // 画像の読み込み完了を監視\n  useEffect(() => {\n    var _chatContainerRef$cur;\n    const images = (_chatContainerRef$cur = chatContainerRef.current) === null || _chatContainerRef$cur === void 0 ? void 0 : _chatContainerRef$cur.getElementsByTagName('img');\n    if (images) {\n      let loadedCount = 0;\n      const totalImages = images.length;\n      const handleImageLoad = () => {\n        loadedCount += 1;\n        if (loadedCount === totalImages) {\n          setAllImagesLoaded(true);\n        }\n      };\n      if (totalImages === 0) {\n        setAllImagesLoaded(true);\n      } else {\n        for (const img of images) {\n          if (img.complete) {\n            handleImageLoad();\n          } else {\n            img.addEventListener('load', handleImageLoad);\n            img.addEventListener('error', handleImageLoad);\n          }\n        }\n      }\n      return () => {\n        for (const img of images) {\n          img.removeEventListener('load', handleImageLoad);\n          img.removeEventListener('error', handleImageLoad);\n        }\n      };\n    }\n  }, [visibleStep, quizStarted, currentQuestionIndex]);\n  const completeChapter = async () => {\n    try {\n      const endTime = Date.now();\n      const elapsed = Math.floor((endTime - startTime) / 1000);\n      const totalStudyTime = studyTime + elapsed;\n      await saveStudyTime(totalStudyTime);\n      await apiRequest('/api/progress/update', {\n        method: 'POST',\n        data: {\n          chapterId: `${chapterId}`,\n          completed: true,\n          studyTime: totalStudyTime\n        }\n      });\n      navigate('/');\n    } catch (error) {\n      console.error('Error completing chapter', error);\n    }\n  };\n  const showNextStep = () => {\n    if (visibleStep < chapter.content.length - 1) {\n      setVisibleStep(visibleStep + 1);\n      setAllImagesLoaded(false); // 新しいステップが追加されるたびにリセット\n    } else {\n      setQuizStarted(true);\n    }\n  };\n  const handleQuizAnswer = selectedAnswer => {\n    const currentQuestion = chapter.quizQuestions[currentQuestionIndex];\n    const correct = selectedAnswer === currentQuestion.correctAnswer;\n    setIsCorrect(correct);\n    setShowFeedback(true);\n    if (correct) {\n      setScore(score + 1);\n    }\n  };\n  const nextQuestion = () => {\n    setShowFeedback(false);\n    if (currentQuestionIndex < chapter.quizQuestions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setShowResults(true); // クイズ終了後の結果表示状態に変更\n    }\n  };\n  if (!isValidChapter) {\n    return null; // または適切なローディング表示\n  }\n  const {\n    title,\n    chapterOverview,\n    content,\n    quizQuestions\n  } = chapter;\n  const progressPercentage = (visibleStep + 1) / content.length * 100;\n\n  // chapterIdの末尾の数値に1を加えるロジック\n  const getNextChapterId = currentId => {\n    const parts = currentId.split('_');\n    const prefix = parts[0];\n    const suffix = parseInt(parts[1], 10) + 1;\n    return `${prefix}_${suffix}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chapter-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-container\",\n        children: [/*#__PURE__*/_jsxDEV(BookOpen, {\n          className: \"book-icon\",\n          size: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"main-title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), visibleStep === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overview-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"overview-title\",\n          children: \"\\u30C1\\u30E3\\u30D7\\u30BF\\u30FC\\u6982\\u8981\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"overview-text\",\n          children: chapterOverview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        style: {\n          width: `${progressPercentage}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      ref: chatContainerRef,\n      children: [content.slice(0, visibleStep + 1).map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: item.type === \"sectionTitle\" ? /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-title\",\n          children: item.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(ChatBubble, {\n          sender: item.sender,\n          type: item.type,\n          text: item.text,\n          src: item.src,\n          alt: item.alt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this)), quizStarted && /*#__PURE__*/_jsxDEV(QuizQuestion, {\n        question: (_quizQuestions$curren = quizQuestions[currentQuestionIndex]) === null || _quizQuestions$curren === void 0 ? void 0 : _quizQuestions$curren.question,\n        options: (_quizQuestions$curren2 = quizQuestions[currentQuestionIndex]) === null || _quizQuestions$curren2 === void 0 ? void 0 : _quizQuestions$curren2.options,\n        handleAnswer: handleQuizAnswer,\n        showFeedback: showFeedback,\n        isCorrect: isCorrect,\n        explanation: (_quizQuestions$curren3 = quizQuestions[currentQuestionIndex]) === null || _quizQuestions$curren3 === void 0 ? void 0 : _quizQuestions$curren3.explanation,\n        nextQuestion: nextQuestion,\n        currentQuestionIndex: currentQuestionIndex,\n        totalQuestions: quizQuestions.length,\n        score: score,\n        completeChapter: completeChapter,\n        showResults: showResults,\n        setShowResults: setShowResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), !quizStarted && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: showNextStep,\n      className: \"next-button\",\n      children: visibleStep < content.length - 1 ? \"次へ\" : \"確認テストを始める\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"links-container\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/marketing-app/Page1/${getNextChapterId(chapterId)}`,\n        children: \"\\u6B21\\u306E\\u7AE0\\u3078\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"\\u30DB\\u30FC\\u30E0\\u306B\\u623B\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n}\n_s(Page1, \"dQqL7gMKOzXq/FC9C/LtXZDTYoM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Page1;\nexport default Page1;\nvar _c;\n$RefreshReg$(_c, \"Page1\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Link","useNavigate","useParams","apiRequest","ChatBubble","QuizQuestion","BookOpen","jsxDEV","_jsxDEV","chapterData","Array","from","length","_","i","require","Page1","_s","_quizQuestions$curren","_quizQuestions$curren2","_quizQuestions$curren3","chapterId","chapterIndex","parseInt","navigate","visibleStep","setVisibleStep","quizStarted","setQuizStarted","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","showFeedback","setShowFeedback","isCorrect","setIsCorrect","showResults","setShowResults","chatContainerRef","studyTime","setStudyTime","startTime","setStartTime","Date","now","inactiveStartTime","setInactiveStartTime","allImagesLoaded","setAllImagesLoaded","inactivityTimer","isValidChapter","chapter","saveStudyTime","time","method","data","error","console","resetInactivityTimer","current","clearTimeout","setTimeout","handleInactivity","handleVisibilityChange","document","visibilityState","hidden","inactiveEndTime","inactiveDuration","Math","floor","prevTime","handleWindowFocus","handleWindowBlur","handleUserActivity","addEventListener","window","removeEventListener","endTime","elapsed","scrollTop","scrollHeight","_chatContainerRef$cur","images","getElementsByTagName","loadedCount","totalImages","handleImageLoad","img","complete","completeChapter","totalStudyTime","completed","showNextStep","content","handleQuizAnswer","selectedAnswer","currentQuestion","quizQuestions","correct","correctAnswer","nextQuestion","title","chapterOverview","progressPercentage","getNextChapterId","currentId","parts","split","prefix","suffix","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","style","width","ref","slice","map","item","index","type","text","sender","src","alt","question","options","handleAnswer","explanation","totalQuestions","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/nharada/marketing-app/src/components/Page1.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport apiRequest from '../utils/apiRequest';\r\nimport '../App.css';\r\nimport ChatBubble from '../components/ChatBubble';\r\nimport QuizQuestion from '../components/QuizQuestion';\r\nimport { BookOpen } from 'lucide-react';\r\n\r\n// フックの前にチャプターデータをロード\r\nconst chapterData = Array.from({ length: 7 }, (_, i) => require(`../data/chapter1/chapter1_${i + 1}.js`));\r\n\r\nfunction Page1() {\r\n  const { chapterId } = useParams();\r\n  const chapterIndex = parseInt(chapterId, 10) - 1;\r\n  const navigate = useNavigate();\r\n\r\n  const [visibleStep, setVisibleStep] = useState(0);\r\n  const [quizStarted, setQuizStarted] = useState(false);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [showFeedback, setShowFeedback] = useState(false);\r\n  const [isCorrect, setIsCorrect] = useState(false);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const chatContainerRef = useRef(null);\r\n  const [studyTime, setStudyTime] = useState(0);\r\n  const [startTime, setStartTime] = useState(Date.now());\r\n  const [inactiveStartTime, setInactiveStartTime] = useState(null);\r\n  const [allImagesLoaded, setAllImagesLoaded] = useState(false);\r\n  const inactivityTimer = useRef(null);\r\n\r\n  // チャプターデータの有効性チェック\r\n  const isValidChapter = chapterIndex >= 0 && chapterIndex < chapterData.length;\r\n  const chapter = isValidChapter ? chapterData[chapterIndex] : null;\r\n\r\n  const saveStudyTime = async (time) => {\r\n    try {\r\n      await apiRequest('/api/progress/update', {\r\n        method: 'POST',\r\n        data: {\r\n          chapterId: `${chapterId}`,\r\n          studyTime: time\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error('Error saving study time', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isValidChapter) {\r\n      // 無効なチャプターIDの場合、ホームページにリダイレクト\r\n      navigate('/');\r\n      return;\r\n    }\r\n\r\n    const resetInactivityTimer = () => {\r\n      if (inactivityTimer.current) {\r\n        clearTimeout(inactivityTimer.current);\r\n      }\r\n      inactivityTimer.current = setTimeout(() => {\r\n        handleInactivity();\r\n      }, 180000); // 3分（180秒）\r\n    };\r\n\r\n    const handleInactivity = () => {\r\n      setInactiveStartTime(Date.now()); // 非アクティブの開始時間を記録\r\n    };\r\n\r\n    const handleVisibilityChange = () => {\r\n      if (document.visibilityState === 'hidden' || document.hidden) {\r\n        handleInactivity();\r\n      } else {\r\n        if (inactiveStartTime) {\r\n          const inactiveEndTime = Date.now();\r\n          const inactiveDuration = Math.floor((inactiveEndTime - inactiveStartTime) / 1000); // 非アクティブ時間\r\n          setInactiveStartTime(null); // 非アクティブ時間をリセット\r\n          setStartTime(prevTime => prevTime + inactiveDuration * 1000); // startTimeを非アクティブ時間だけ進める\r\n        }\r\n        setStartTime(Date.now());\r\n        resetInactivityTimer();\r\n      }\r\n    };\r\n\r\n    const handleWindowFocus = () => {\r\n      if (inactiveStartTime) {\r\n        const inactiveEndTime = Date.now();\r\n        const inactiveDuration = Math.floor((inactiveEndTime - inactiveStartTime) / 1000); // 非アクティブ時間\r\n        setInactiveStartTime(null); // 非アクティブ時間をリセット\r\n        setStartTime(prevTime => prevTime + inactiveDuration * 1000); // startTimeを非アクティブ時間だけ進める\r\n      }\r\n      setStartTime(Date.now());\r\n      resetInactivityTimer();\r\n    };\r\n\r\n    const handleWindowBlur = () => {\r\n      handleInactivity();\r\n    };\r\n\r\n    const handleUserActivity = () => {\r\n      if (inactiveStartTime) {\r\n        const inactiveEndTime = Date.now();\r\n        const inactiveDuration = Math.floor((inactiveEndTime - inactiveStartTime) / 1000); // 非アクティブ時間\r\n        setInactiveStartTime(null); // 非アクティブ時間をリセット\r\n        setStartTime(prevTime => prevTime + inactiveDuration * 1000); // startTimeを非アクティブ時間だけ進める\r\n      }\r\n      resetInactivityTimer();\r\n    };\r\n\r\n    document.addEventListener('visibilitychange', handleVisibilityChange);\r\n    window.addEventListener('focus', handleWindowFocus);\r\n    window.addEventListener('blur', handleWindowBlur);\r\n    window.addEventListener('mousemove', handleUserActivity);\r\n    window.addEventListener('keydown', handleUserActivity);\r\n    window.addEventListener('touchstart', handleUserActivity); // スマホ対応\r\n    window.addEventListener('touchmove', handleUserActivity); // スマホ対応\r\n\r\n    return () => {\r\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\r\n      window.removeEventListener('focus', handleWindowFocus);\r\n      window.removeEventListener('blur', handleWindowBlur);\r\n      window.removeEventListener('mousemove', handleUserActivity);\r\n      window.removeEventListener('keydown', handleUserActivity);\r\n      window.removeEventListener('touchstart', handleUserActivity); // スマホ対応\r\n      window.removeEventListener('touchmove', handleUserActivity); // スマホ対応\r\n\r\n      if (inactivityTimer.current) {\r\n        clearTimeout(inactivityTimer.current);\r\n      }\r\n\r\n      const endTime = Date.now();\r\n      const elapsed = Math.floor((endTime - startTime) / 1000);\r\n      saveStudyTime(studyTime + elapsed); // isMountedチェックを外して保存\r\n    };\r\n\r\n  }, [isValidChapter, navigate, startTime, studyTime, chapterId, inactiveStartTime, saveStudyTime]);\r\n\r\n  // コンテンツが追加されるたびに最下部にスクロール\r\n  useEffect(() => {\r\n    if (chatContainerRef.current) {\r\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\r\n    }\r\n  }, [visibleStep, quizStarted, currentQuestionIndex, showFeedback, showResults, allImagesLoaded]);\r\n\r\n  // 画像の読み込み完了を監視\r\n  useEffect(() => {\r\n    const images = chatContainerRef.current?.getElementsByTagName('img');\r\n    if (images) {\r\n      let loadedCount = 0;\r\n      const totalImages = images.length;\r\n\r\n      const handleImageLoad = () => {\r\n        loadedCount += 1;\r\n        if (loadedCount === totalImages) {\r\n          setAllImagesLoaded(true);\r\n        }\r\n      };\r\n\r\n      if (totalImages === 0) {\r\n        setAllImagesLoaded(true);\r\n      } else {\r\n        for (const img of images) {\r\n          if (img.complete) {\r\n            handleImageLoad();\r\n          } else {\r\n            img.addEventListener('load', handleImageLoad);\r\n            img.addEventListener('error', handleImageLoad);\r\n          }\r\n        }\r\n      }\r\n\r\n      return () => {\r\n        for (const img of images) {\r\n          img.removeEventListener('load', handleImageLoad);\r\n          img.removeEventListener('error', handleImageLoad);\r\n        }\r\n      };\r\n    }\r\n  }, [visibleStep, quizStarted, currentQuestionIndex]);\r\n\r\n  const completeChapter = async () => {\r\n    try {\r\n      const endTime = Date.now();\r\n      const elapsed = Math.floor((endTime - startTime) / 1000);\r\n      const totalStudyTime = studyTime + elapsed;\r\n      await saveStudyTime(totalStudyTime);\r\n\r\n      await apiRequest('/api/progress/update', {\r\n          method: 'POST',\r\n          data: {\r\n              chapterId: `${chapterId}`,\r\n              completed: true,\r\n              studyTime: totalStudyTime\r\n          }\r\n      });\r\n\r\n      navigate('/');\r\n    } catch (error) {\r\n      console.error('Error completing chapter', error);\r\n    }\r\n  };\r\n\r\n  const showNextStep = () => {\r\n    if (visibleStep < chapter.content.length - 1) {\r\n      setVisibleStep(visibleStep + 1);\r\n      setAllImagesLoaded(false); // 新しいステップが追加されるたびにリセット\r\n    } else {\r\n      setQuizStarted(true);\r\n    }\r\n  };\r\n\r\n  const handleQuizAnswer = (selectedAnswer) => {\r\n    const currentQuestion = chapter.quizQuestions[currentQuestionIndex];\r\n    const correct = selectedAnswer === currentQuestion.correctAnswer;\r\n    setIsCorrect(correct);\r\n    setShowFeedback(true);\r\n    if (correct) {\r\n      setScore(score + 1);\r\n    }\r\n  };\r\n\r\n  const nextQuestion = () => {\r\n    setShowFeedback(false);\r\n    if (currentQuestionIndex < chapter.quizQuestions.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    } else {\r\n      setShowResults(true); // クイズ終了後の結果表示状態に変更\r\n    }\r\n  };\r\n\r\n  if (!isValidChapter) {\r\n    return null; // または適切なローディング表示\r\n  }\r\n\r\n  const { title, chapterOverview, content, quizQuestions } = chapter;\r\n  const progressPercentage = ((visibleStep + 1) / content.length) * 100;\r\n\r\n  // chapterIdの末尾の数値に1を加えるロジック\r\n  const getNextChapterId = (currentId) => {\r\n    const parts = currentId.split('_');\r\n    const prefix = parts[0];\r\n    const suffix = parseInt(parts[1], 10) + 1;\r\n    return `${prefix}_${suffix}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"Content\">\r\n      <div className=\"chapter-header\">\r\n        <div className=\"title-container\">\r\n          <BookOpen className=\"book-icon\" size={50} />\r\n          <h1 className=\"main-title\">{title}</h1>\r\n        </div>\r\n      \r\n        {visibleStep === 0 && (\r\n          <div className=\"overview-container\">\r\n            <h2 className=\"overview-title\">チャプター概要</h2>\r\n            <p className=\"overview-text\">{chapterOverview}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"progress-bar-container\">\r\n        <div className=\"progress-bar\" style={{ width: `${progressPercentage}%` }}></div>\r\n      </div>\r\n      \r\n      <div className=\"chat-container\" ref={chatContainerRef}>\r\n        {content.slice(0, visibleStep + 1).map((item, index) => (\r\n          <div key={index}>\r\n            {item.type === \"sectionTitle\" ? (\r\n              <h3 className=\"section-title\">{item.text}</h3>\r\n            ) : (\r\n              <ChatBubble sender={item.sender} type={item.type} text={item.text} src={item.src} alt={item.alt} />\r\n            )}\r\n          </div>\r\n        ))}\r\n\r\n        {quizStarted && (\r\n          <QuizQuestion\r\n            question={quizQuestions[currentQuestionIndex]?.question}\r\n            options={quizQuestions[currentQuestionIndex]?.options}\r\n            handleAnswer={handleQuizAnswer}\r\n            showFeedback={showFeedback}\r\n            isCorrect={isCorrect}\r\n            explanation={quizQuestions[currentQuestionIndex]?.explanation}\r\n            nextQuestion={nextQuestion}\r\n            currentQuestionIndex={currentQuestionIndex}\r\n            totalQuestions={quizQuestions.length}\r\n            score={score}\r\n            completeChapter={completeChapter}\r\n            showResults={showResults}\r\n            setShowResults={setShowResults}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      {!quizStarted && (\r\n        <button onClick={showNextStep} className=\"next-button\">\r\n          {visibleStep < content.length - 1 ? \"次へ\" : \"確認テストを始める\"}\r\n        </button>\r\n      )}\r\n      \r\n      <div className=\"links-container\">\r\n        <Link to={`/marketing-app/Page1/${getNextChapterId(chapterId)}`}>次の章へ</Link>\r\n        <Link to=\"/\">ホームに戻る</Link>  \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Page1;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}